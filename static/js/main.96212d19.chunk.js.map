{"version":3,"sources":["contexts/WindowContext.jsx","constants/consts.js","contexts/UserContext.jsx","layouts/HeaderBar.jsx","layouts/PageLayout.jsx","components/Prompt.jsx","contexts/CacheContex.jsx","hooks/useGit.js","components/Shell.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["WindowContext","createContext","title","setTitle","input","setInput","WindowProvider","children","useState","Provider","value","INITIAL_OUTPUT","OPTIONS","BASE_URL","README_URL","UserContext","githubUser","String","setGithubUser","Function","githubUserData","Object","fetchUserData","a","ghUser","user","sessionStorage","getItem","fetch","then","json","setItem","JSON","stringify","parse","UserProvider","React","useCallback","isLoading","setLoading","setGithubUserData","useEffect","res","message","HeaderBar","useContext","Header","as","floated","Content","Image","src","avatar_url","avatar","circular","name","PageLayout","SegmentGroup","raised","Segment","clearing","basic","tertiary","inverted","className","Prompt","print","localInput","setLocalInput","style","backgroundColor","border","color","marginLeft","placeholder","type","onChange","target","onKeyDown","event","key","INITIAL_CACHE","CacheContext","cache","setCache","ls","resetCache","CacheProvider","map","item","join","repoMap","p","url","html_url","description","updated_at","language","repoFilter","option","projects","data","filter","filtered","catch","err","Error","Git","owner","login","fetchProjects","Shell","buffer","setBuffer","setCacheToGit","useGit","file","help","setHelp","fetchReadme","text","commandSwitch","cmd","param","includes","find","userInput","split","currOutput","setTimeout","App","x","Math","floor","random","y","z","bgColor","document","body","background","randomBgColor","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.96212d19.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_TITLE = '~';\n\nconst WindowContext = createContext({\n  title: INITIAL_TITLE,\n  setTitle: () => { },\n  input: '',\n  setInput: () => { },\n});\nexport default WindowContext;\n\nexport function WindowProvider({ children }) {\n  const [title, setTitle] = useState(INITIAL_TITLE);\n  const [input, setInput] = useState('');\n  return (\n    <WindowContext.Provider value={{\n      title, setTitle, input, setInput,\n    }}\n    >\n      {children}\n    </WindowContext.Provider>\n  );\n}\nWindowProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const INITIAL_OUTPUT = 'Welcome home \\nUse **help** command for more info';\nexport const OPTIONS = [\n  'help', 'ls', 'echo', 'cd', 'open', 'clear', 'read', 'su',\n];\nexport const TIMEOUT_404 = 3000;\nexport const USERNAME = 'shaqash';\nexport const BASE_URL = 'https://api.github.com/users/';\nexport const README_URL = `https://raw.githubusercontent.com/${USERNAME}/rTerminal/master/README.md`;\n\nexport default {\n  INITIAL_OUTPUT,\n  OPTIONS,\n  TIMEOUT_404,\n  README_URL,\n};\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { USERNAME, BASE_URL } from '../constants/consts';\n\nconst UserContext = createContext({\n  githubUser: String,\n  setGithubUser: Function,\n  githubUserData: Object,\n});\n\nasync function fetchUserData(ghUser = USERNAME) {\n  let user = sessionStorage.getItem(`${ghUser}.userdata`);\n  if (!user) {\n    user = await fetch(`${BASE_URL}${ghUser}`)\n      .then((json) => json.json());\n    sessionStorage.setItem(`${ghUser}.userdata`, JSON.stringify(user));\n  } else {\n    user = JSON.parse(user);\n  }\n  return user;\n}\n\n/**\n * User context provider\n * @param {React.Props} param0 props\n */\nexport function UserProvider({ children }) {\n  const [githubUser, setGithubUser] = useState(USERNAME);\n  const fetch = React.useCallback(\n    async () => fetchUserData(githubUser),\n    [githubUser],\n  );\n  const [isLoading, setLoading] = React.useState(false);\n  const [githubUserData, setGithubUserData] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await fetch();\n      if (res.message === 'Not Found') setGithubUser(USERNAME);\n      setGithubUserData(res);\n    })();\n  }, [fetch]);\n\n  return (\n    <UserContext.Provider value={{ githubUser, setGithubUser, githubUserData }}>\n      {!isLoading ? <>Loading</> : children}\n    </UserContext.Provider>\n  );\n}\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default UserContext;\n","import React, { useContext } from 'react';\nimport {\n  Image, Header,\n} from 'semantic-ui-react';\nimport WindowContext from '../contexts/WindowContext';\nimport UserContext from '../contexts/UserContext';\n\nconst HeaderBar = () => {\n  const { title } = useContext(WindowContext);\n  const { githubUserData } = useContext(UserContext);\n\n  return (\n    <div>\n      <Header as=\"h5\" floated=\"left\">\n        <Header.Content>\n          <Image src={githubUserData?.avatar_url} avatar circular />\n          <span>\n            {githubUserData?.name}\n            :\n            {title}\n          </span>\n        </Header.Content>\n      </Header>\n    </div>\n  );\n};\nexport default HeaderBar;\n","import PropTypes from 'prop-types';\nimport {\n  Segment, SegmentGroup,\n} from 'semantic-ui-react';\nimport React from 'react';\nimport HeaderBar from './HeaderBar';\n\nconst PageLayout = ({ children }) => (\n  <SegmentGroup raised>\n    <Segment clearing basic tertiary>\n      <HeaderBar />\n    </Segment>\n    <Segment inverted>\n      <div className=\"terminalWindow\">\n        {children}\n      </div>\n    </Segment>\n  </SegmentGroup>\n);\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default PageLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WindowContext from '../contexts/WindowContext';\n\nconst Prompt = ({\n  print,\n}) => {\n  const [localInput, setLocalInput] = React.useState('');\n  const { setInput } = React.useContext(WindowContext);\n  const runCommand = (event) => {\n    const { key, target: { value } } = event;\n    if (key === 'Enter' || key === 'Tab') {\n      setInput(localInput);\n      setLocalInput('');\n      print(value);\n    }\n  };\n  return (\n    <code>\n      $\n      <input\n        style={{\n          backgroundColor: 'transparent',\n          border: 0,\n          color: 'white',\n          marginLeft: 10,\n        }}\n        placeholder=\"...\"\n        value={localInput}\n        type=\"text\"\n        onChange={({ target: { value } }) => setLocalInput(value)}\n        onKeyDown={runCommand}\n      />\n      <br />\n    </code>\n  );\n};\nPrompt.propTypes = {\n  print: PropTypes.func.isRequired,\n};\nexport default Prompt;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_CACHE = [\n  { name: 'projects' },\n  { name: 'posts' },\n];\n\nconst CacheContext = createContext({\n  cache: Object,\n  setCache: Function,\n  ls: String,\n  resetCache: Function,\n});\nexport default CacheContext;\n\nexport function CacheProvider({ children }) {\n  const [cache, setCache] = useState(INITIAL_CACHE);\n  const lsFunc = (c) => c.map((item) => item.name).join(' ');\n  const ls = React.useCallback(\n    lsFunc(cache),\n    [cache],\n  );\n  const resetCache = () => setCache(INITIAL_CACHE);\n  return (\n    <CacheContext.Provider value={{\n      cache, setCache, ls, resetCache,\n    }}\n    >\n      {children}\n    </CacheContext.Provider>\n  );\n}\nCacheProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport CacheContext from '../contexts/CacheContex';\nimport UserContext from '../contexts/UserContext';\nimport { BASE_URL } from '../constants/consts';\n\nconst repoMap = (p) => ({\n  name: p.name,\n  url: p.html_url,\n  description: p.description,\n  updated_at: p.updated_at,\n  language: p.language,\n});\n\nasync function fetchProjects(ghUser, repoFilter, option = 'repos') {\n  let projects = sessionStorage.getItem(`${ghUser}.starred`);\n  if (!projects) {\n    projects = await fetch(`${BASE_URL}${ghUser}/${option}`)\n      .then((data) => data.json()) // Convert to JSON\n      .then((json) => json.filter(repoFilter)) // Filter by owner = me\n      .then((filtered) => filtered.map(repoMap)) // Map only required fields\n      .catch((err) => new Error(err));\n    sessionStorage.setItem(`${ghUser}.starred`, JSON.stringify(projects));\n  } else {\n    projects = JSON.parse(projects);\n  }\n  return projects;\n}\n\n/**\n * Custom hook for fetching git info and set cache\n * @returns {Function}\n */\nconst Git = () => {\n  const { setCache } = React.useContext(CacheContext);\n  const { githubUser } = React.useContext(UserContext);\n  const repoFilter = (p) => p.owner.login === githubUser;\n  const setCacheToGit = () => {\n    fetchProjects(githubUser, repoFilter)\n      .then((projects) => setCache(projects))\n      .catch((err) => new Error(err));\n  };\n\n  return setCacheToGit;\n};\nexport default Git;\n","import React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Prompt from './Prompt';\nimport useGit from '../hooks/useGit';\nimport WindowContext from '../contexts/WindowContext';\nimport CacheContext from '../contexts/CacheContex';\nimport {\n  INITIAL_OUTPUT, OPTIONS, TIMEOUT_404, README_URL,\n} from '../constants/consts';\nimport UserContext from '../contexts/UserContext';\n\nexport default function Shell() {\n  const [buffer, setBuffer] = React.useState(INITIAL_OUTPUT);\n  const { setGithubUser, githubUser } = React.useContext(UserContext);\n  const { cache, ls, resetCache } = React.useContext(CacheContext);\n  const { setTitle } = useContext(WindowContext);\n  const setCacheToGit = useGit();\n  const [help, setHelp] = React.useState(`${OPTIONS.map((file) => `${file} `)}`);\n\n  const fetchReadme = async (url) => fetch(url)\n    .then((data) => data.text());\n\n  React.useEffect(() => {\n    fetchReadme(README_URL)\n      .then((text) => setHelp(text))\n      .catch(() => setHelp(OPTIONS.join(' ')));\n  }, []);\n\n  const commandSwitch = ([cmd, param]) => {\n    switch (cmd) {\n      case 'ls':\n        return `${ls}`;\n      case 'cd':\n        if (param && !ls.includes(param)) throw new Error('Unknown directory');\n        setTitle(!param ? '~' : param);\n        if (!param) {\n          resetCache();\n          return INITIAL_OUTPUT;\n        }\n        return param === 'projects' && setCacheToGit();\n      case 'echo':\n        return param;\n      case 'open':\n        if (param && !ls.includes(param)) throw new Error('File not found');\n        return JSON.stringify(cache.find((item) => item.name === param), null, 2);\n      case 'read':\n        if (param && !ls.includes(param)) throw new Error('File not found');\n        return fetchReadme(`https://raw.githubusercontent.com/${githubUser}/${param}/master/README.md`);\n      case 'help':\n        return `${help}`;\n      case 'clear':\n        return '';\n      case 'su':\n        resetCache();\n        setGithubUser(param);\n        return INITIAL_OUTPUT;\n      default:\n        throw new Error('Command not found');\n    }\n  };\n\n  /**\n   * Interprets user input\n   * @param {String} userInput User input\n   */\n  const print = async (userInput) => {\n    try {\n      const [cmd, param] = userInput.split(' ');\n      const findOption = OPTIONS.find(\n        (option) => option.includes(cmd) && option,\n      );\n      if (!findOption) throw new Error('Command not found');\n      const res = await commandSwitch([cmd, param]);\n      setBuffer(res);\n    } catch (err) {\n      const currOutput = buffer;\n      setBuffer(err.message);\n      setTimeout(() => {\n        setBuffer(currOutput);\n      }, TIMEOUT_404);\n    }\n  };\n\n  return (\n    <div>\n      <ReactMarkdown className=\"code\">\n        {buffer}\n      </ReactMarkdown>\n      <Prompt print={print} />\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Container,\n} from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport PageLayout from './layouts/PageLayout';\nimport { WindowProvider } from './contexts/WindowContext';\nimport Shell from './components/Shell';\nimport { CacheProvider } from './contexts/CacheContex';\nimport { UserProvider } from './contexts/UserContext';\n\nconst App = () => {\n  function randomBgColor() {\n    const x = Math.floor(Math.random() * 50);\n    const y = Math.floor(Math.random() * 100);\n    const z = Math.floor(Math.random() * 256);\n    const bgColor = `rgb(${x},${y},${z})`;\n\n    document.body.style.background = bgColor;\n  }\n\n  React.useEffect(() => {\n    randomBgColor();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Container>\n        <WindowProvider>\n          <UserProvider>\n            <CacheProvider>\n              <PageLayout>\n                <Shell />\n              </PageLayout>\n            </CacheProvider>\n          </UserProvider>\n        </WindowProvider>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}