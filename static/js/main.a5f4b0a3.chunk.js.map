{"version":3,"sources":["contexts/WindowContext.jsx","layouts/HeaderBar.jsx","layouts/PageLayout.jsx","components/Prompt.jsx","contexts/CacheContex.jsx","hooks/useGit.js","constants/consts.js","components/Shell.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["WindowContext","createContext","title","setTitle","input","setInput","WindowProvider","children","useState","Provider","value","HeaderBar","useContext","Header","as","floated","Content","Image","src","avatar","circular","PageLayout","SegmentGroup","raised","Segment","clearing","basic","tertiary","inverted","className","Prompt","print","React","localInput","setLocalInput","style","backgroundColor","border","color","marginLeft","placeholder","type","onChange","target","onKeyDown","event","key","INITIAL_CACHE","name","CacheContext","cache","Object","setCache","Function","ls","String","resetCache","CacheProvider","useCallback","map","item","join","url","repoMap","p","html_url","description","updated_at","language","repoFilter","owner","login","a","projects","sessionStorage","getItem","fetch","then","data","json","filter","filtered","setItem","JSON","stringify","parse","Git","fetchProjects","INITIAL_OUTPUT","OPTIONS","README_URL","Shell","buffer","setBuffer","setCacheToGit","useGit","file","help","setHelp","fetchReadme","text","useEffect","catch","commandSwitch","cmd","param","includes","Error","find","userInput","split","option","res","currOutput","message","setTimeout","App","x","Math","floor","random","y","z","bgColor","document","body","background","randomBgColor","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.a5f4b0a3.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_TITLE = '~';\n\nconst WindowContext = createContext({\n  title: INITIAL_TITLE,\n  setTitle: () => { },\n  input: '',\n  setInput: () => { },\n});\nexport default WindowContext;\n\nexport function WindowProvider({ children }) {\n  const [title, setTitle] = useState(INITIAL_TITLE);\n  const [input, setInput] = useState('');\n  return (\n    <WindowContext.Provider value={{\n      title, setTitle, input, setInput,\n    }}\n    >\n      {children}\n    </WindowContext.Provider>\n  );\n}\nWindowProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useContext } from 'react';\nimport {\n  Image, Header,\n} from 'semantic-ui-react';\nimport WindowContext from '../contexts/WindowContext';\n\nconst author = 'Shaked Ashkenazi';\n// const socialLinks = {\n//   github: 'shaqash',\n//   linkedin: 'shaked-ashkenazi',\n//   rss: '',\n// };\n\n// const menuItems = [\n//   { link: `https://github.com/${socialLinks.github}`, iconName: 'github', color: 'black' },\n//   { link: `https://www.linkedin.com/in/${socialLinks.linkedin}`, iconName: 'alternate linkedin', color: 'blue' },\n//   { link: '', iconName: 'rss', color: 'orange' },\n// ];\n\nconst HeaderBar = () => {\n  const { title } = useContext(WindowContext);\n  return (\n    <div>\n      <Header as=\"h5\" floated=\"left\">\n        <Header.Content>\n          <Image src=\"https://avatars.githubusercontent.com/u/18087805\" avatar circular />\n          <span>\n            {author}\n            :\n            {title}\n          </span>\n        </Header.Content>\n      </Header>\n    </div>\n  );\n};\nexport default HeaderBar;\n","import PropTypes from 'prop-types';\nimport {\n  Segment, SegmentGroup,\n} from 'semantic-ui-react';\nimport React from 'react';\nimport HeaderBar from './HeaderBar';\n\nconst PageLayout = ({ children }) => (\n  <SegmentGroup raised>\n    <Segment clearing basic tertiary>\n      <HeaderBar />\n    </Segment>\n    <Segment inverted>\n      <div className=\"terminalWindow\">\n        {children}\n      </div>\n    </Segment>\n  </SegmentGroup>\n);\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default PageLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WindowContext from '../contexts/WindowContext';\n\nconst Prompt = ({\n  print,\n}) => {\n  const [localInput, setLocalInput] = React.useState('');\n  const { setInput } = React.useContext(WindowContext);\n  const runCommand = (event) => {\n    const { key, target: { value } } = event;\n    if (key === 'Enter' || key === 'Tab') {\n      setInput(localInput);\n      setLocalInput('');\n      print(value);\n    }\n  };\n  return (\n    <code>\n      $\n      <input\n        style={{\n          backgroundColor: 'transparent',\n          border: 0,\n          color: 'white',\n          marginLeft: 10,\n        }}\n        placeholder=\"...\"\n        value={localInput}\n        type=\"text\"\n        onChange={({ target: { value } }) => setLocalInput(value)}\n        onKeyDown={runCommand}\n      />\n      <br />\n    </code>\n  );\n};\nPrompt.propTypes = {\n  print: PropTypes.func.isRequired,\n};\nexport default Prompt;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_CACHE = [\n  { name: 'projects' },\n  { name: 'posts' },\n];\n\nconst CacheContext = createContext({\n  cache: Object,\n  setCache: Function,\n  ls: String,\n  resetCache: Function,\n});\nexport default CacheContext;\n\nexport function CacheProvider({ children }) {\n  const [cache, setCache] = useState(INITIAL_CACHE);\n  const lsFunc = (c) => c.map((item) => item.name).join(' ');\n  const ls = React.useCallback(\n    lsFunc(cache),\n    [cache],\n  );\n  const resetCache = () => setCache(INITIAL_CACHE);\n  return (\n    <CacheContext.Provider value={{\n      cache, setCache, ls, resetCache,\n    }}\n    >\n      {children}\n    </CacheContext.Provider>\n  );\n}\nCacheProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport CacheContext from '../contexts/CacheContex';\n\nconst user = 'shaqash';\nconst url = `https://api.github.com/users/${user}`;\n\nconst repoMap = (p) => ({\n  name: p.name,\n  url: p.html_url,\n  description: p.description,\n  updated_at: p.updated_at,\n  language: p.language,\n});\n\nconst repoFilter = (p) => p.owner.login === user;\n\nasync function fetchProjects() {\n  let projects = sessionStorage.getItem('shaq.starred');\n  if (!projects) {\n    projects = await fetch(`${url}/starred`)\n      .then((data) => data.json()) // Convert to JSON\n      .then((json) => json.filter(repoFilter)) // Filter by owner = me\n      .then((filtered) => filtered.map(repoMap)); // Map only required fields\n    sessionStorage.setItem('shaq.starred', JSON.stringify(projects));\n  } else {\n    projects = JSON.parse(projects);\n  }\n  return projects;\n}\n\n/**\n * Custom hook for fetching git info and set cache\n * @returns {Function}\n */\nconst Git = () => {\n  const { setCache } = React.useContext(CacheContext);\n  const setCacheToGit = () => {\n    fetchProjects().then((projects) => {\n      setCache(projects);\n    });\n  };\n\n  return setCacheToGit;\n};\nexport default Git;\n","export const INITIAL_OUTPUT = 'Welcome to mywebsite.sh \\nUse help command for more info';\nexport const OPTIONS = [\n  'help', 'ls', 'echo', 'cd', 'open', 'clear', 'read',\n];\nexport const TIMEOUT_404 = 3000;\nexport const README_URL = 'https://raw.githubusercontent.com/shaqash/rTerminal/master/README.md';\n\nexport default {\n  INITIAL_OUTPUT,\n  OPTIONS,\n  TIMEOUT_404,\n  README_URL,\n};\n","import React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Prompt from './Prompt';\nimport useGit from '../hooks/useGit';\nimport WindowContext from '../contexts/WindowContext';\nimport CacheContext from '../contexts/CacheContex';\nimport {\n  INITIAL_OUTPUT, OPTIONS, TIMEOUT_404, README_URL,\n} from '../constants/consts';\n\nexport default function Shell() {\n  const [buffer, setBuffer] = React.useState(INITIAL_OUTPUT);\n  const { cache, ls, resetCache } = React.useContext(CacheContext);\n  const { setTitle } = useContext(WindowContext);\n  const setCacheToGit = useGit();\n  const [help, setHelp] = React.useState(`${OPTIONS.map((file) => `${file} `)}`);\n\n  const fetchReadme = async (url) => fetch(url)\n    .then((data) => data.text());\n\n  React.useEffect(() => {\n    fetchReadme(README_URL)\n      .then((text) => setHelp(text))\n      .catch(() => setHelp(OPTIONS.join(' ')));\n  }, []);\n\n  const commandSwitch = ([cmd, param]) => {\n    switch (cmd) {\n      case 'ls':\n        return `${ls}`;\n      case 'cd':\n        if (param && !ls.includes(param)) throw new Error('Unknown directory');\n        setTitle(!param ? '~' : param);\n        if (!param) {\n          resetCache();\n          return INITIAL_OUTPUT;\n        }\n        return param === 'projects' && setCacheToGit();\n      case 'echo':\n        return param;\n      case 'open':\n        if (param && !ls.includes(param)) throw new Error('File not found');\n        return JSON.stringify(cache.find((item) => item.name === param), null, 2);\n      case 'read':\n        if (param && !ls.includes(param)) throw new Error('File not found');\n        return fetchReadme(`https://raw.githubusercontent.com/shaqash/${param}/master/README.md`);\n      case 'help':\n        return `${help}`;\n      case 'clear':\n        return '';\n      default:\n        throw new Error('Command not found');\n    }\n  };\n\n  /**\n   * Interprets user input\n   * @param {String} userInput User input\n   */\n  const print = async (userInput) => {\n    try {\n      const [cmd, param] = userInput.split(' ');\n      const findOption = OPTIONS.find(\n        (option) => option.includes(cmd) && option,\n      );\n      if (!findOption) throw new Error('Command not found');\n      const res = await commandSwitch([cmd, param]);\n      setBuffer(res);\n    } catch (err) {\n      const currOutput = buffer;\n      setBuffer(err.message);\n      setTimeout(() => {\n        setBuffer(currOutput);\n      }, TIMEOUT_404);\n    }\n  };\n\n  return (\n    <div>\n      <ReactMarkdown className=\"code\">\n        {buffer}\n      </ReactMarkdown>\n      <Prompt print={print} />\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Container,\n} from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport PageLayout from './layouts/PageLayout';\nimport { WindowProvider } from './contexts/WindowContext';\nimport Shell from './components/Shell';\nimport { CacheProvider } from './contexts/CacheContex';\n\nconst App = () => {\n  function randomBgColor() {\n    const x = Math.floor(Math.random() * 50);\n    const y = Math.floor(Math.random() * 100);\n    const z = Math.floor(Math.random() * 256);\n    const bgColor = `rgb(${x},${y},${z})`;\n\n    document.body.style.background = bgColor;\n  }\n\n  React.useEffect(() => {\n    randomBgColor();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Container>\n        <WindowProvider>\n          <CacheProvider>\n            <PageLayout>\n              <Shell />\n            </PageLayout>\n          </CacheProvider>\n        </WindowProvider>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}